1. Для практикума из занятия 7 продумать, где можно применить замыкания.

Замыкания можно применить там где необходимо вызывать внутреннюю функцию вне зависимости от контекста, в котором она была создана.


2. Не выполняя кода, ответить, что выведет браузер и почему:

// Вернёт undefined так как a: undefined, значения она в данном случае не получит
if (!("a" in window)) {
    var a = 1;
}
alert(a);


// Вернёт то что 'a' не объявлена, так как 'a' находится в области видимости 'b'
var b = function a(x) {
    x && a(--x);
};
alert(a);

// Вернёт текст функции, так как var a, не переназначает объект без знака присвоения =
function a(x) {
    return x * 2;
}
var a;
alert(a);


// Вернёт 10, так как arguments[2] и 'a' это ссылки на одну и туже ячейку в памяти изменяя одну, мы меняем и вторую.
function b(x, y, a) {
    arguments[2] = 10;
    alert(a);
}
b(1, 2, 3);


// Вернёт объект window, так как метод call вызывает функцию с указанным значением this, но так как стоит null, то возвращаеться объект window
function a() {
    alert(this);
}
a.call(null);